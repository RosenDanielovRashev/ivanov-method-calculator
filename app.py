import streamlit as st
import pandas as pd
import numpy as np
from scipy.interpolate import griddata
import matplotlib.pyplot as plt

@st.cache_data
def load_data():
    return pd.read_csv("combined_data.csv")

data = load_data()
points = data[['h_over_D', 'E1_over_E2']].values
values = data['Eeq_over_E2'].values

def compute_Eeq(h, D, E1, E2):
    hD = h / D
    E1E2 = E1 / E2
    ratio = griddata(points, values, (hD, E1E2), method='linear')
    if np.isnan(ratio):
        return None
    return ratio * E2

st.title("üìê –ö–∞–ª–∫—É–ª–∞—Ç–æ—Ä: –ú–µ—Ç–æ–¥ –Ω–∞ –ò–≤–∞–Ω–æ–≤")

# –í—Ö–æ–¥–Ω–∏ –ø–æ–ª–µ—Ç–∞
E1 = st.number_input("E1 (MPa)", value=3000)
E2 = st.number_input("E2 (MPa)", value=200)
h = st.number_input("h (cm)", value=20)
D = st.number_input("D (cm)", value=30)

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –∏–∑—á–∏—Å–ª–µ–Ω–∏ —Å—ä–æ—Ç–Ω–æ—à–µ–Ω–∏—è
st.subheader("üìä –í—ä–≤–µ–¥–µ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:")
st.write(pd.DataFrame({
    "–ü–∞—Ä–∞–º–µ—Ç—ä—Ä": ["E1", "E2", "h", "D", "E1 / E2", "h / D"],
    "–°—Ç–æ–π–Ω–æ—Å—Ç": [E1, E2, h, D, round(E1 / E2, 3), round(h / D, 3)]
}))

# –ë—É—Ç–æ–Ω –∑–∞ –∏–∑—á–∏—Å–ª–µ–Ω–∏–µ
if st.button("–ò–∑—á–∏—Å–ª–∏"):
    result = compute_Eeq(h, D, E1, E2)
    hD_point = h / D
    E1E2_point = E1 / E2

    if result is None:
        st.warning("–ò–∑–≤—ä–Ω –æ–±—Ö–≤–∞—Ç–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞. –î–æ–±–∞–≤–∏ –æ—â–µ –∏–∑–æ–ª–∏–Ω–∏–∏.")
    else:
        st.success(f"Eeq = {result:.2f} MPa")
        st.info(f"Eeq / E2 = {result / E2:.3f}")

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞
        hD_vals = np.linspace(0.01, 0.75, 100)
        Eeq_vals = []
        hD_clean = []

        for hd in hD_vals:
            val = compute_Eeq(hd * D, D, E1, E2)
            if val is not None:
                Eeq_vals.append(val / E2)
                hD_clean.append(hd)

        fig, ax = plt.subplots()
        ax.plot(hD_clean, Eeq_vals, label="Eeq/E2", color='blue')
        ax.scatter([hD_point], [result / E2], color='red', label="–¢–≤–æ—è—Ç–∞ —Ç–æ—á–∫–∞", zorder=5)
        ax.set_xlabel("h/D")
        ax.set_ylabel("Eeq/E2")
        ax.set_title("–ì—Ä–∞—Ñ–∏–∫–∞: Eeq/E2 —Å–ø—Ä—è–º–æ h/D")
        ax.legend()
        st.pyplot(fig)